# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="%APPLICATION_SECRET%"
play.http.secret.key=${?APP_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

#this messes with k8s health pings. in deployment you'll want to enable this and set ALLOWED_HOSTSs
play.filters.disabled += play.filters.hosts.AllowedHostsFilter

mongodb {
  dbname = "vaultdoor"
  collection = "audit"
  uri = "mongodb://localhost:27017"
}

vaults {
  settings-path="/Users/localhome/Desktop/vaults"
  settings-path=${?VAULT_SETTINGS_PATH}
  vaultDataPath="/assets/vault_data"
}

shared_secret = "rubbish"

# Session configuration
play.http.session = {

  # The cookie name
  cookieName = "vaultdoor_session"
  cookieName = ${?COOKIE_NAME}

  # Whether the secure attribute of the cookie should be set to true, i.e. only send over https.
  # we want https in production but might not be able to use it if this is done at the LB
  secure = false

  # The max age to set on the cookie.
  # If null, the cookie expires when the user closes their browser.
  # An important thing to note, this only sets when the browser will discard the cookie.
  maxAge = null

  # Whether the HTTP only attribute of the cookie should be set to true. this prevents the cookie from being accessible
  # to client-side javascript and therefore XSS attacks
  httpOnly = true

  # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
  sameSite = "strict"

  # The domain to set on the session cookie
  # If null, does not set a domain on the session cookie.
  # You should change this to your deployment domain
  domain = null
  domain = ${?DEPLOYMENT_DOMAIN}
  # The session path
  # Must start with /.
  path = ${play.http.context}

  jwt {
    # The JWT signature algorithm to use on the session cookie
    # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
    signatureAlgorithm = "HS256"

    # The time after which the session is automatically invalidated.
    # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
    expiresAfter = ${play.http.session.maxAge}

    # The amount of clock skew to accept between servers when performing date checks
    # If you have NTP or roughtime synchronizing between servers, you can enhance
    # security by tightening this value.
    clockSkew = 30 seconds

    # The claim key under which all user data is stored in the JWT.
    dataClaim = "data"
  }
}

play.filters.enabled += "play.filters.csrf.CSRFFilter"

play.filters.csrf {
  cookie.name = "csrftoken"
}

elasticsearch {
  hostname = "localhost"
}

projectlocker {
  baseUri = "https://prexit.local/pluto-core"
}

pluto {
  baseUri = "http://localhost:8000"
}

auth {
  tokenSigningCertPath = "keycloak-local.pem"
  adminClaimName = "admin_claim_name_goes_here"
  clientId = "vaultdoor"
  resource = "https://keycloak.local"
  oAuthUri = "https://keycloak.local/auth/realms/master/protocol/openid-connect/auth"
  tokenUri = "https://keycloak.local/auth/realms/master/protocol/openid-connect/token"
  validAudiences = [
    "vaultdoor",
    "prexit-local"
  ]
  adminClaim = "is_admin"
}


name: Build and upload VaultDoor

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    # The first two permissions are needed to interact with GitHub's OIDC Token endpoint.
    # The second set of two permissions are needed to write test results back to GH
    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 8

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17.6.0"

      - name: Update Apt-Get
        run: sudo apt-get update

      - name: Install xmllint
        run: sudo apt -y install libxml2-utils

      - name: Install rpm
        run: sudo apt install rpm

      - name: Make GITHUB_RUN_NUMBER env var available outside of shells
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: bash
        run: |
          echo GITHUB_RUN_NUMBER=$(( GITHUB_RUN_NUMBER + 210 ))>> $GITHUB_ENV

      - name: Prepare test outputs location
        run: if [ -d "junit-tests" ]; then mkdir junit-tests; fi

      - name: Add .npmrc
        run: "echo -e \"\n//npm.pkg.github.com/:_authToken=${{secrets.GITHUB_TOKEN}}\" >> .npmrc"
        working-directory: frontend

      - run: npm install
        working-directory: frontend
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm test
        env:
          JEST_JUNIT_OUTPUT_DIR: ../junit-tests
          JEST_JUNIT_TITLE: Frontend tests
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Build and test everything
        env:
          JAVA_OPTS: "-Dbuild.number=${{ env.GITHUB_RUN_NUMBER }}"
          SBT_JUNIT_OUTPUT: ./junit-tests
        run: sbt -v clean compile test rpm:packageBin

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Upload to S3
        run: |
          aws s3 cp /home/runner/work/VaultDoor/VaultDoor/target/rpm/RPMS/noarch/vaultdoor-1.0-${{ env.GITHUB_RUN_NUMBER }}.noarch.rpm s3://${{ secrets.AWS_BUCKET }}/vaultdoor/${{env.GITHUB_RUN_NUMBER}}/vaultdoor-1.0-${{env.GITHUB_RUN_NUMBER}}.noarch.rpm
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()  #runs even if there is a test failure
        with:
          files: junit-tests/*.xml

      - name: Output build-info.yaml
        uses: fredex42/pluto-build-info@v1.1
        with:
          builtimage: "s3://${{ secrets.AWS_BUCKET }}/vaultdoor/${{env.GITHUB_RUN_NUMBER}}/vaultdoor-1.0-${{env.GITHUB_RUN_NUMBER}}.noarch.rpm"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check the output
        run: cat build-info.yaml

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build-info.yaml